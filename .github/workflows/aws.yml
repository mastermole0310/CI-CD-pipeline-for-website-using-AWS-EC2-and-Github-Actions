name: Publish Web App
on:
  push:
    branches:
      - 'main'
      
  pull_request:
    branches:
      - 'main'
    
env:
  AWS_REGION: us-east-1
                                               
  CONTAINER_NAME: my_website           
                                                   
jobs:
   build:
    runs-on: ubuntu-latest
    steps:  
  
     - uses: actions/checkout@v3
       with:
        fetch-depth: 0
        
     - name: Generate semver
       id: version-generator
       run: |
        export ARTEFACT_VERSION=$(git describe --long --always)
        echo ::set-output name=ARTEFACT_VERSION::$ARTEFACT_VERSION 
       
         
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
       with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1

     - name: Build, tag, and push image to Amazon ECR
       id: build-image
       env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: test_repo
          IMAGE_TAG: ${{ steps.version-generator.outputs.ARTEFACT_VERSION }}
       run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
            
        
     - uses: actions/checkout@v2
       name: Deploy in EC2
       env:
            PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
            HOSTNAME : ${{ secrets.HOSTNAME  }}
            USER_NAME : ${{ secrets.USER_NAME  }}
            
     
            
            
            
            
            
            
            
            
